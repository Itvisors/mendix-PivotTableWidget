// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

public class Incident
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject incidentMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.Incident";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		incidentDate("incidentDate"),
		incidentTitle("incidentTitle"),
		incidentDescription("incidentDescription"),
		Incident_Category("MyFirstModule.Incident_Category"),
		Incident_Carrier("MyFirstModule.Incident_Carrier"),
		Incident_Employee("MyFirstModule.Incident_Employee");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Incident(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MyFirstModule.Incident"));
	}

	protected Incident(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject incidentMendixObject)
	{
		if (incidentMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("MyFirstModule.Incident", incidentMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MyFirstModule.Incident");

		this.incidentMendixObject = incidentMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Incident.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static myfirstmodule.proxies.Incident initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return myfirstmodule.proxies.Incident.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static myfirstmodule.proxies.Incident initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.Incident(context, mendixObject);
	}

	public static myfirstmodule.proxies.Incident load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.Incident.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.Incident> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<myfirstmodule.proxies.Incident> result = new java.util.ArrayList<myfirstmodule.proxies.Incident>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//MyFirstModule.Incident" + xpathConstraint))
			result.add(myfirstmodule.proxies.Incident.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of incidentDate
	 */
	public final java.util.Date getincidentDate()
	{
		return getincidentDate(getContext());
	}

	/**
	 * @param context
	 * @return value of incidentDate
	 */
	public final java.util.Date getincidentDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.incidentDate.toString());
	}

	/**
	 * Set value of incidentDate
	 * @param incidentdate
	 */
	public final void setincidentDate(java.util.Date incidentdate)
	{
		setincidentDate(getContext(), incidentdate);
	}

	/**
	 * Set value of incidentDate
	 * @param context
	 * @param incidentdate
	 */
	public final void setincidentDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date incidentdate)
	{
		getMendixObject().setValue(context, MemberNames.incidentDate.toString(), incidentdate);
	}

	/**
	 * @return value of incidentTitle
	 */
	public final String getincidentTitle()
	{
		return getincidentTitle(getContext());
	}

	/**
	 * @param context
	 * @return value of incidentTitle
	 */
	public final String getincidentTitle(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.incidentTitle.toString());
	}

	/**
	 * Set value of incidentTitle
	 * @param incidenttitle
	 */
	public final void setincidentTitle(String incidenttitle)
	{
		setincidentTitle(getContext(), incidenttitle);
	}

	/**
	 * Set value of incidentTitle
	 * @param context
	 * @param incidenttitle
	 */
	public final void setincidentTitle(com.mendix.systemwideinterfaces.core.IContext context, String incidenttitle)
	{
		getMendixObject().setValue(context, MemberNames.incidentTitle.toString(), incidenttitle);
	}

	/**
	 * @return value of incidentDescription
	 */
	public final String getincidentDescription()
	{
		return getincidentDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of incidentDescription
	 */
	public final String getincidentDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.incidentDescription.toString());
	}

	/**
	 * Set value of incidentDescription
	 * @param incidentdescription
	 */
	public final void setincidentDescription(String incidentdescription)
	{
		setincidentDescription(getContext(), incidentdescription);
	}

	/**
	 * Set value of incidentDescription
	 * @param context
	 * @param incidentdescription
	 */
	public final void setincidentDescription(com.mendix.systemwideinterfaces.core.IContext context, String incidentdescription)
	{
		getMendixObject().setValue(context, MemberNames.incidentDescription.toString(), incidentdescription);
	}

	/**
	 * @return value of Incident_Category
	 */
	public final myfirstmodule.proxies.Category getIncident_Category() throws com.mendix.core.CoreException
	{
		return getIncident_Category(getContext());
	}

	/**
	 * @param context
	 * @return value of Incident_Category
	 */
	public final myfirstmodule.proxies.Category getIncident_Category(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.Category result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Incident_Category.toString());
		if (identifier != null)
			result = myfirstmodule.proxies.Category.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Incident_Category
	 * @param incident_category
	 */
	public final void setIncident_Category(myfirstmodule.proxies.Category incident_category)
	{
		setIncident_Category(getContext(), incident_category);
	}

	/**
	 * Set value of Incident_Category
	 * @param context
	 * @param incident_category
	 */
	public final void setIncident_Category(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.Category incident_category)
	{
		if (incident_category == null)
			getMendixObject().setValue(context, MemberNames.Incident_Category.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Incident_Category.toString(), incident_category.getMendixObject().getId());
	}

	/**
	 * @return value of Incident_Carrier
	 */
	public final myfirstmodule.proxies.Carrier getIncident_Carrier() throws com.mendix.core.CoreException
	{
		return getIncident_Carrier(getContext());
	}

	/**
	 * @param context
	 * @return value of Incident_Carrier
	 */
	public final myfirstmodule.proxies.Carrier getIncident_Carrier(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.Carrier result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Incident_Carrier.toString());
		if (identifier != null)
			result = myfirstmodule.proxies.Carrier.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Incident_Carrier
	 * @param incident_carrier
	 */
	public final void setIncident_Carrier(myfirstmodule.proxies.Carrier incident_carrier)
	{
		setIncident_Carrier(getContext(), incident_carrier);
	}

	/**
	 * Set value of Incident_Carrier
	 * @param context
	 * @param incident_carrier
	 */
	public final void setIncident_Carrier(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.Carrier incident_carrier)
	{
		if (incident_carrier == null)
			getMendixObject().setValue(context, MemberNames.Incident_Carrier.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Incident_Carrier.toString(), incident_carrier.getMendixObject().getId());
	}

	/**
	 * @return value of Incident_Employee
	 */
	public final myfirstmodule.proxies.Employee getIncident_Employee() throws com.mendix.core.CoreException
	{
		return getIncident_Employee(getContext());
	}

	/**
	 * @param context
	 * @return value of Incident_Employee
	 */
	public final myfirstmodule.proxies.Employee getIncident_Employee(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.Employee result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Incident_Employee.toString());
		if (identifier != null)
			result = myfirstmodule.proxies.Employee.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Incident_Employee
	 * @param incident_employee
	 */
	public final void setIncident_Employee(myfirstmodule.proxies.Employee incident_employee)
	{
		setIncident_Employee(getContext(), incident_employee);
	}

	/**
	 * Set value of Incident_Employee
	 * @param context
	 * @param incident_employee
	 */
	public final void setIncident_Employee(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.Employee incident_employee)
	{
		if (incident_employee == null)
			getMendixObject().setValue(context, MemberNames.Incident_Employee.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Incident_Employee.toString(), incident_employee.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return incidentMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.Incident that = (myfirstmodule.proxies.Incident) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MyFirstModule.Incident";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
